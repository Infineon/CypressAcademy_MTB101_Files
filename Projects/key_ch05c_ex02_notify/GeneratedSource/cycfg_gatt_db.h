/***************************************************************************//**
* File Name: cycfg_gatt_db.h
* Version: 2.1
*
* Description:
* Definitions for constants used in the device's GATT database and function
* prototypes.
* This file should not be modified. It was automatically generated by
* Bluetooth Configurator 2.1.0.2188
*
********************************************************************************
* Copyright 2020 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#if !defined(CYCFG_GATT_DB_H)
#define CYCFG_GATT_DB_H

#include "stdint.h"

#define __UUID_SERVICE_GENERIC_ACCESS               0x1800
#define __UUID_CHARACTERISTIC_DEVICE_NAME           0x2A00
#define __UUID_CHARACTERISTIC_APPEARANCE            0x2A01
#define __UUID_SERVICE_GENERIC_ATTRIBUTE            0x1801
#define __UUID_SERVICE_MODUS101                     0x00u, 0xB0u, 0xB5u, 0x0Eu, 0xFEu, 0xAAu, 0xFDu, 0xB6u, 0x09u, 0x4Fu, 0xEAu, 0x54u, 0x63u, 0x9Du, 0xCDu, 0xFDu
#define __UUID_CHARACTERISTIC_MODUS101_LED          0x5Fu, 0x74u, 0xE3u, 0x1Eu, 0x38u, 0x13u, 0x89u, 0xA7u, 0xC3u, 0x4Eu, 0xA9u, 0x7Au, 0x0Du, 0x12u, 0xE9u, 0xECu
#define __UUID_CHARACTERISTIC_MODUS101_COUNTER      0x12u, 0xECu, 0xDFu, 0x04u, 0x76u, 0x2Fu, 0x90u, 0x8Fu, 0x81u, 0x4Bu, 0xA9u, 0xAEu, 0x22u, 0xE2u, 0x83u, 0xD8u
#define __UUID_DESCRIPTOR_CLIENT_CHARACTERISTIC_CONFIGURATION    0x2902

/* Service Generic Access */
#define HDLS_GAP                                    0x01
/* Characteristic Device Name */
#define HDLC_GAP_DEVICE_NAME                        0x02
#define HDLC_GAP_DEVICE_NAME_VALUE                  0x03
/* Characteristic Appearance */
#define HDLC_GAP_APPEARANCE                         0x04
#define HDLC_GAP_APPEARANCE_VALUE                   0x05

/* Service Generic Attribute */
#define HDLS_GATT                                   0x06

/* Service Modus101 */
#define HDLS_MODUS101                               0x07
/* Characteristic LED */
#define HDLC_MODUS101_LED                           0x08
#define HDLC_MODUS101_LED_VALUE                     0x09
/* Characteristic Counter */
#define HDLC_MODUS101_COUNTER                       0x0A
#define HDLC_MODUS101_COUNTER_VALUE                 0x0B
/* Descriptor Client Characteristic Configuration */
#define HDLD_MODUS101_COUNTER_CLIENT_CHAR_CONFIG    0x0C

/* External Lookup Table Entry */
typedef struct
{
    uint16_t handle;
    uint16_t max_len;
    uint16_t cur_len;
    uint8_t  *p_data;
} gatt_db_lookup_table_t;

/* External definitions */
extern const uint8_t  gatt_database[];
extern const uint16_t gatt_database_len;
extern gatt_db_lookup_table_t app_gatt_db_ext_attr_tbl[];
extern const uint16_t app_gatt_db_ext_attr_tbl_size;
extern uint8_t app_gap_device_name[];
extern const uint16_t app_gap_device_name_len;
extern uint8_t app_gap_appearance[];
extern const uint16_t app_gap_appearance_len;
extern uint8_t app_modus101_led[];
extern const uint16_t app_modus101_led_len;
extern uint8_t app_modus101_counter[];
extern const uint16_t app_modus101_counter_len;
extern uint8_t app_modus101_counter_client_char_config[];
extern const uint16_t app_modus101_counter_client_char_config_len;

#endif /* CYCFG_GATT_DB_H */

